eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9zcnYvYXBwCiAgcGF0aDogc3JjL2dpdGh1Yi5jb20vdGJvZXJnZXIvcmVkaXJlY3RzCgpwaXBlbGluZToKICB0ZXN0aW5nOgogICAgaW1hZ2U6IHdlYmhpcHBpZS9nb2xhbmc6ZWRnZQogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIENHT19FTkFCTEVEOiAwCiAgICAgIFRBR1M6CiAgICAgIEdPUEFUSDogL3Nydi9hcHAKICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgY2xlYW4KICAgICAgLSBtYWtlIHZldAogICAgICAtIG1ha2UgdmFyY2hlY2sKICAgICAgLSBtYWtlIHN0cnVjdGNoZWNrCiAgICAgIC0gbWFrZSB1bnVzZWQKICAgICAgLSBtYWtlIGdvc2ltcGxlCiAgICAgIC0gbWFrZSB1bmNvbnZlcnQKICAgICAgLSBtYWtlIGluZWZmYXNzaWduCiAgICAgIC0gbWFrZSBsaW50CiAgICAgIC0gbWFrZSB0ZXN0CiAgICAgIC0gbWFrZSBidWlsZAoKICAjIHRlc3QteWFtbDoKICAjICAgaW1hZ2U6IHdlYmhpcHBpZS9nb2xhbmc6ZWRnZQogICMgICBwdWxsOiB0cnVlCiAgIyAgIGVudmlyb25tZW50OgogICMgICAgIENHT19FTkFCTEVEOiAwCiAgIyAgICAgVEFHUzoKICAjICAgICBHT1BBVEg6IC9zcnYvYXBwCiAgIyAgIGNvbW1hbmRzOgogICMgICAgIC0gbWFrZSB0ZXN0LXlhbWwKICAjICAgd2hlbjoKICAjICAgICBldmVudDogWyBwdXNoIF0KCiAgIyB0ZXN0LWpzb246CiAgIyAgIGltYWdlOiB3ZWJoaXBwaWUvZ29sYW5nOmVkZ2UKICAjICAgcHVsbDogdHJ1ZQogICMgICBlbnZpcm9ubWVudDoKICAjICAgICBDR09fRU5BQkxFRDogMAogICMgICAgIFRBR1M6CiAgIyAgICAgR09QQVRIOiAvc3J2L2FwcAogICMgICBjb21tYW5kczoKICAjICAgICAtIG1ha2UgdGVzdC1qc29uCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgcHVzaCBdCgogICMgdGVzdC1ldGNkOgogICMgICBpbWFnZTogd2ViaGlwcGllL2dvbGFuZzplZGdlCiAgIyAgIHB1bGw6IHRydWUKICAjICAgZW52aXJvbm1lbnQ6CiAgIyAgICAgQ0dPX0VOQUJMRUQ6IDAKICAjICAgICBUQUdTOgogICMgICAgIEdPUEFUSDogL3Nydi9hcHAKICAjICAgY29tbWFuZHM6CiAgIyAgICAgLSBtYWtlIHRlc3QtZXRjZAogICMgICB3aGVuOgogICMgICAgIGV2ZW50OiBbIHB1c2ggXQoKICAjIHRlc3QtY29uc3VsOgogICMgICBpbWFnZTogd2ViaGlwcGllL2dvbGFuZzplZGdlCiAgIyAgIHB1bGw6IHRydWUKICAjICAgZW52aXJvbm1lbnQ6CiAgIyAgICAgQ0dPX0VOQUJMRUQ6IDAKICAjICAgICBUQUdTOgogICMgICAgIEdPUEFUSDogL3Nydi9hcHAKICAjICAgY29tbWFuZHM6CiAgIyAgICAgLSBtYWtlIHRlc3QtY29uc3VsCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgcHVzaCBdCgogICMgdGVzdC16b29rZWVwZXI6CiAgIyAgIGltYWdlOiB3ZWJoaXBwaWUvZ29sYW5nOmVkZ2UKICAjICAgcHVsbDogdHJ1ZQogICMgICBlbnZpcm9ubWVudDoKICAjICAgICBDR09fRU5BQkxFRDogMAogICMgICAgIFRBR1M6CiAgIyAgICAgR09QQVRIOiAvc3J2L2FwcAogICMgICBjb21tYW5kczoKICAjICAgICAtIG1ha2UgdGVzdC16b29rZWVwZXIKICAjICAgd2hlbjoKICAjICAgICBldmVudDogWyBwdXNoIF0KCiAgdXBkYXRlcjoKICAgIGltYWdlOiBrYXJhbGFiZS94Z28tbGF0ZXN0OmxhdGVzdAogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIENHT19FTkFCTEVEOiAwCiAgICAgIFRBR1M6CiAgICAgIEdPUEFUSDogL3Nydi9hcHAKICAgIGNvbW1hbmRzOgogICAgICAtIG1ha2UgcmVsZWFzZQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciwgcmVsZWFzZS8qLCByZWZzL3RhZ3MvKiBdCgogIGRvY2tlcjoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzogdGJvZXJnZXIvcmVkaXJlY3RzCiAgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUk5BTUV9CiAgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU1dPUkR9CiAgICB0YWdzOiBbICcke0RST05FX1RBRyMjdn0nIF0KICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHRhZyBdCiAgICAgIGJyYW5jaDogWyByZWZzL3RhZ3MvKiBdCgogIGRvY2tlcjoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzogdGJvZXJnZXIvcmVkaXJlY3RzCiAgICB1c2VybmFtZTogJHtET0NLRVJfVVNFUk5BTUV9CiAgICBwYXNzd29yZDogJHtET0NLRVJfUEFTU1dPUkR9CiAgICB0YWdzOiBbICcke0RST05FX0JSQU5DSCMjcmVsZWFzZS92fScgXQogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgICAgIGJyYW5jaDogWyByZWxlYXNlLyogXQoKICBkb2NrZXI6CiAgICBpbWFnZTogcGx1Z2lucy9kb2NrZXIKICAgIHJlcG86IHRib2VyZ2VyL3JlZGlyZWN0cwogICAgdXNlcm5hbWU6ICR7RE9DS0VSX1VTRVJOQU1FfQogICAgcGFzc3dvcmQ6ICR7RE9DS0VSX1BBU1NXT1JEfQogICAgdGFnczogWyAnbGF0ZXN0JyBdCiAgICB3aGVuOgogICAgICBldmVudDogWyBwdXNoIF0KICAgICAgYnJhbmNoOiBbIG1hc3RlciBdCgogICMgcnN5bmM6CiAgIyAgIGltYWdlOiBwbHVnaW5zL3JzeW5jCiAgIyAgIHVzZXI6IGRlcGxveQogICMgICBob3N0OiBkbC5ib2VyZ2VyLndzCiAgIyAgIHNvdXJjZTogZGlzdC9yZWxlYXNlLwogICMgICB0YXJnZXQ6IGRsL3JlZGlyZWN0cy8ke0RST05FX1RBRyMjdn0KICAjICAgcmVjdXJzaXZlOiB0cnVlCiAgIyAgIGRlbGV0ZTogdHJ1ZQogICMgICB3aGVuOgogICMgICAgIGV2ZW50OiBbIHRhZyBdCiAgIyAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KCiAgIyByc3luYzoKICAjICAgaW1hZ2U6IHBsdWdpbnMvcnN5bmMKICAjICAgdXNlcjogZGVwbG95CiAgIyAgIGhvc3Q6IGRsLmJvZXJnZXIud3MKICAjICAgc291cmNlOiBkaXN0L3JlbGVhc2UvCiAgIyAgIHRhcmdldDogZGwvcmVkaXJlY3RzLyR7RFJPTkVfVEFHIyNyZWxlYXNlL3Z9CiAgIyAgIHJlY3Vyc2l2ZTogdHJ1ZQogICMgICBkZWxldGU6IHRydWUKICAjICAgd2hlbjoKICAjICAgICBldmVudDogWyBwdXNoIF0KICAjICAgICBicmFuY2g6IFsgcmVsZWFzZS8qIF0KCiAgIyByc3luYzoKICAjICAgaW1hZ2U6IHBsdWdpbnMvcnN5bmMKICAjICAgdXNlcjogZGVwbG95CiAgIyAgIGhvc3Q6IGRsLmJvZXJnZXIud3MKICAjICAgc291cmNlOiBkaXN0L3JlbGVhc2UvCiAgIyAgIHRhcmdldDogZGwvcmVkaXJlY3RzL21hc3RlcgogICMgICByZWN1cnNpdmU6IHRydWUKICAjICAgZGVsZXRlOiB0cnVlCiAgIyAgIHdoZW46CiAgIyAgICAgZXZlbnQ6IFsgcHVzaCBdCiAgIyAgICAgYnJhbmNoOiBbIG1hc3RlciBdCgogIGdpdGh1YjoKICAgIGltYWdlOiBwbHVnaW5zL2dpdGh1Yi1yZWxlYXNlCiAgICBhcGlfa2V5OiAke0dJVEhVQl9SRUxFQVNFX0FQSV9LRVl9CiAgICBmaWxlczoKICAgICAgLSBkaXN0L3JlbGVhc2UvKgogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgdGFnIF0KICAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KCiAgZ2l0dGVyOgogICAgaW1hZ2U6IHBsdWdpbnMvZ2l0dGVyCiAgICB3ZWJob29rOiAke0dJVFRFUl9XRUJIT09LfQo.prJnJGgmwed-b530xhw10Ru2NYReau1zIjzcx2uOZHU